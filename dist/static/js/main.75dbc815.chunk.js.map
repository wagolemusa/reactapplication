{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Link","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","createdAt","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","authorLastName","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastname","signUp","Redirect","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","lastNmae","lastName","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducers","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.75dbc815.chunk.js","sourcesContent":["import React from 'react'\nimport  { NavLink } from  'react-router-dom'\nimport  { connect } from 'react-redux'\nimport { signOut } from '../../store/actions/authActions'\n\nconst SignedInLinks = (props) => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to='/create'>New Project</NavLink></li>\n            <li><a onClick={props.signOut}>Log Out </a></li>\n            <li><NavLink to='/' className='btn btn-floating pink lighten-1'>\n\n            {props.profile.initials}\n            </NavLink></li>\n\n        </ul>\n\n    )\n}\nconst mapDispatchToProps = (dispatch) =>{\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","// function for logging in \nexport const signIn = (credentials) => {\n    return (dispatch, getState, {getFirebase}) =>{\n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() =>{\n            dispatch({ type: 'LOGIN_SUCCESS' });\n        }).catch((err) => {\n            dispatch({ type: 'LOGIN_ERROR', err });\n        });\n    }\n}\n\n// function for logging  logout\nexport const signOut = () =>{\n    return (dispatch, getState, {getFirebase}) =>{\n        const firebase = getFirebase();\n        \n        firebase.auth().signOut().then(()=>{\n            dispatch({ type: 'SIGNOUT_SUCCESS'});\n        })\n    }\n}\n\n// User Sign Up function\n\nexport const signUp =   (newUser) => {\n    return (dispatch, getState, {getFirebase, getFirestore }) =>{\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((resp)=>{\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName: newUser.firstName,\n                lastNmae: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0]\n\n            })\n        }).then(()=>{\n            dispatch({ type: 'SIGNUP_SUCCES'})\n        }).catch(err => {\n            dispatch({ type: 'SIGNUP_ERROR', err })\n        })\n    }\n}","import React from 'react'\n\nimport  { NavLink } from  'react-router-dom'\n\nconst SignedOutLinks = () => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to='/signup'>Signup</NavLink></li>\n            <li><NavLink to='/signin'>SignIn</NavLink></li>\n\n        </ul>\n\n    )\n}\n\nexport default SignedOutLinks;","import React from 'react'\nimport  { Link } from  'react-router-dom'\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\nimport { connect } from 'react-redux'\n\n\nconst Navbar = (props) => {\n    const { auth, profile } = props;\n    const links = auth.uid ?  <SignedInLinks   profile={profile} /> : <SignedOutLinks />\n    return (\n        <nav className=\"nav-wrapper grey darken-3\">\n            <div className=\"container\">\n                <Link to='/' className=\"brand-logo\">Refuge Wise</Link>\n                { links }\n            </div>\n        </nav>\n    )\n}\n\nconst mapStateToProps = (state) =>{\n    console.log(state)\n    return{\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\nexport default connect(mapStateToProps)(Navbar)","import React from  'react'\nimport moment from 'moment'\n\nconst Notifications = (props) => {\n    const { notifications} = props;\n    return (\n        <div className=\"section\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">Notifications</span>\n                    <div className=\"notifications\">\n                    { notifications && notifications.map(item => {\n                        return (\n                            <li key={item.id}>\n                                <span className=\"pink-text\">{item.user}</span>\n                                <span>{item.content}</span>\n                                <div className=\"grey-text note-date\">\n                                {moment(item.time.toDate()).fromNow()}\n                                </div>\n                            </li>\n                        )\n                    })}\n\n                    </div>\n                </div>\n            </div>\n        </div>\n        \n    )\n}\n\nexport default Notifications;","import React from 'react'\nimport moment from 'moment'\nconst ProjectSummary = ({project}) =>{\n    return (\n        <div className=\"card z-depth-0 project-summary\">\n            <span className=\"card-title\">{project.title} </span>\n            <p>Posted by {project.authorFirstName}</p>\n            <p className=\"greg-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n        </div>\n\n    )\n}\nexport default ProjectSummary","import React from 'react'\nimport ProjectSummary from './ProjectSummary';\nimport { Link } from  'react-router-dom'\n\nconst ProjectList  = ({projects}) =>{\n    return (\n        <div className=\"project-list section\">\n            { projects && projects.map(project => {\n                return (\n                    <Link to={'/project/' + project.id} key={project.id}>\n                    <ProjectSummary project={project} key={project.id} />\n                    </Link>\n                )\n            })}\n        </div>\n\n    )\n}\n\nexport default ProjectList;","import React, { Component } from 'react';\nimport Notifications from './Notifications';\nimport ProjectList from '../projects/ProjectList';\nimport { connect } from 'react-redux'\nimport {  firestoreConnect } from 'react-redux-firebase'\nimport  { compose } from 'redux'\n//import { Redirect } from 'react-router-dom';\n\nclass Dashboard extends Component {\n    render(){\n        //console.log(this.props)\n        const { projects, notifications } = this.props;\n        //if (!auth.uid) return <Redirect to='/sigin' />\n        return (\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <ProjectList  projects={projects} />\n                    </div>\n                    <div className=\"col s12 m5 offset-m1\">\n                         <Notifications notifications={notifications} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStoreToProps = (state) => {\n    return {\n        projects: state.firestore.ordered.projects,\n       // auth: state.firestore.auth,\n        notifications: state.firestore.ordered.notifications\n    }\n}\n\nexport default compose(\n    connect(mapStoreToProps),\n    firestoreConnect([\n        { collection: 'projects', orderBy: ['createdAt', 'desc'] },\n        { collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\n    ])\n)(Dashboard);","import React from 'react'\nimport { connect } from 'react-redux'\nimport {  firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux'\nimport moment from 'moment'\nconst ProjectDetails = (props) => {\n    const { project } = props;\n    if (project){\n        return (\n        <div className=\"container section project-details\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">{ project.title }</span>\n                    <p>{ project.content } </p>\n                </div>\n                <div className=\"card-action gret lighten-4 grey-text\">\n                    <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\n                    <div>{moment(project.createdAt.toDate()).calendar()}</div>\n                </div>\n            </div>\n        </div>\n        )\n    }else{\n        return (\n            <div className=\"container center\">\n            <p>Loading project.....</p>\n            \n            </div>\n        \n        )\n    }\n \n}\n\nconst mapStateToProps = (state, ownProps) =>{\n    const id = ownProps.match.params.id;\n    const projects = state.firestore.data.projects;\n    const project  = projects ? projects[id] :  null\n    return {\n        project: project\n\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects' }\n    ])\n)(ProjectDetails)","import React, { Component } from  'react'\nimport { connect } from 'react-redux'\nimport { signIn } from '../../store/actions/authActions'\n\nclass SignIn extends Component {\n    state = {\n        email: '',\n        password: ''\n    }\n    \n    handleChange = (e) =>{\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) =>{\n        e.preventDefault();\n        this.props.signIn(this.state);\n    }\n\n    render(){\n        const { authError } = this.props;\n        return(\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text-darken-3\">Sign In</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Email</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n                    </div>\n\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                        <div className=\"red-text center\">\n                            { authError ? <p>{authError}</p> : null}    \n                        </div>\n                    </div>\n                </form> \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)","import React, { Component } from  'react'\nimport { signUp } from '../../store/actions/authActions';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nclass SignUp extends Component {\n    state = {\n        email: '',\n        password: '',\n        firstName: '',\n        lastname: ''\n    }\n    \n    handleChange = (e) =>{\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) =>{\n        e.preventDefault();\n        this.props.signUp(this.state)\n\n    }\n\n    render(){\n        const { auth, authError } = this.props;\n        if (auth.uid) return <Redirect to='/' />\n        return(\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text-darken-3\">Sign Up</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"firstName\">First Name</label>\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"lastName\">Last Name</label>\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Email</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n                    </div>\n\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                    <div className=\"red-text center\">\n                        { authError ? <p>{authError}</p> : null}    \n                    </div>\n                    </div>\n                   \n                </form> \n            </div>\n        )\n    }\n}\n\n\nconst mapStoreToProps = (state) =>{\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\nexport default connect(mapStoreToProps, mapDispatchToProps)(SignUp)","import React, { Component } from  'react'\nimport { connect } from 'react-redux'\nimport { createProject } from '../../store/actions/projectActions';\n\nclass CreateProject extends Component {\n    state = {\n        title: '',\n        content: ''\n    }\n    \n    handleChange = (e) =>{\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) =>{\n        e.preventDefault();\n        // console.log(this.state);\n        this.props.createProject(this.state)\n        this.props.history.push('/')\n\n    }\n\n    render(){\n        return(\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text-darken-3\">Create New Project</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"content\">Content Project</label>\n                        <textarea id=\"content\" className=\"materialize-textarea\"  onChange={this.handleChange}></textarea>\n                    </div>\n\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n                    </div>\n                </form> \n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createProject: (project) => dispatch(createProject(project))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(CreateProjectexport const createProject = (project) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        \n        // make asyc call to database\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n        firestore.collection('projects').add({\n            ...project,\n            authorFirstName: profile.firstName,\n            // authorLastName: profile.lastName,\n            authorId: authorId,\n            createdAt: new Date()\n        }).then(() => {\n            dispatch({ type: 'CREATE_PROJECT', project });\n        }).catch((err)=>{\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err });\n\n        })\n    }\n};","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar/>\n          <Switch>\n              <Route exact path='/' component={Dashboard} />\n              <Route path='/project/:id' component={ProjectDetails} />\n              <Route path='/signin' component={ SignIn} />\n              <Route path='/signup' component={ SignUp} />\n              <Route path='/create' component={ CreateProject} />\n\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {}\n\nconst authReducer = (state = initState, action) =>{\n    switch(action.type){\n        case 'LOGIN_ERROR':\n            console.log('login error')\n            return {\n                ...state,\n                authError: 'Login failed'\n            }\n        case 'LOGIN_SUCCESS':\n            console.log('login success')\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('signout success')\n            return state;\n\n        case 'SIGNUP_SUCCES':\n            console.log('signup success')\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n            console.log('signup error')\n            return {\n                ...state,\n                authError: action.err.message\n            }\n        default:\n            return state;\n    }\n}\n\nexport default authReducer;","const initState = {\n    projects: [\n        {id: '1', title: 'help me find poech', content: 'blas nlash blash'},\n        {id: '2', title: 'collect all the stars', content: 'I do not understard what is all about'},\n        {id: '3', title: 'Hip Hop', content: 'Hip hop musch started is a cullter'}\n    ]\n}\n\nconst projectReducer = (state = initState, action) =>{\n    switch (action.type){\n        case 'CREATE_PROJECT':\n            console.log('created project', action.project);\n            return state;\n        case 'CREATE_PROJECT_ERROR':\n            console.log('create project error', action.err);\n            return state;\n        default:\n            return state\n    \n    }\n}\n\nexport default projectReducer;","import authReducer from './authReducer';\nimport projectReducer from './projectReducer';\nimport { combineReducers } from 'redux'\nimport { firestoreReducer } from 'redux-firestore'\nimport { firebaseReducer } from 'react-redux-firebase'\n\nconst rootReducers = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer, // retrive data\n    firebase: firebaseReducer\n})\n\nexport default rootReducers","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n  \n  // Initialize Firebase\n  var config = {\n    apiKey: \"AIzaSyDHF6r-pqx5aSUZ3_CmOAQH8RgZhGZrTLA\",\n    authDomain: \"refugeplan.firebaseapp.com\",\n    databaseURL: \"https://refugeplan.firebaseio.com\",\n    projectId: \"refugeplan\",\n    storageBucket: \"refugeplan.appspot.com\",\n    messagingSenderId: \"622230161953\"\n  };\n  firebase.initializeApp(config);\n  firebase.firestore().settings({ timestampsInSnapshots: true });\n\n  export default firebase;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducers from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux'\nimport thunk from  'redux-thunk'\nimport {reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase,  getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducers, \n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true})\n        )\n    );   \n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n    serviceWorker.unregister();\n\n})\n\n"],"sourceRoot":""}